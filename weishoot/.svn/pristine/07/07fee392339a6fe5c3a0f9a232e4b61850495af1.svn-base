
package com.NationalPhotograpy.weishoot.activity.photograph;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.GridView;
import android.widget.LinearLayout;

import com.NationalPhotograpy.weishoot.R;
import com.NationalPhotograpy.weishoot.activity.BaseActivity;
import com.NationalPhotograpy.weishoot.activity.MediaStoreUtils;
import com.NationalPhotograpy.weishoot.activity.registered.ProcessHeadActivity;
import com.NationalPhotograpy.weishoot.adapter.photograph.SelectPicAdapter;
import com.NationalPhotograpy.weishoot.adapter.photograph.SelectPicAdapter.SelectSinglePicClickListener;
import com.NationalPhotograpy.weishoot.adapter.photograph.SelectPicAdapter.UploadClickListener;
import com.NationalPhotograpy.weishoot.storage.Constant;
import com.NationalPhotograpy.weishoot.utils.BitmapUtils1;
import com.NationalPhotograpy.weishoot.utils.WeiShootToast;

/**
 * 选择图片
 */
@SuppressLint({
        "SimpleDateFormat", "HandlerLeak"
})
public class SelectPicActivity extends BaseActivity implements OnClickListener {

    private GridView mGirdView;

    private Button btn_right, btn_yulan, btn_fayuantu;

    private LinearLayout layout_back, layout_bottom;

    private String photoGraphType;

    private SelectPicAdapter selectPicAdapter;

    public ArrayList<String> imageUrlList = new ArrayList<String>();

    private ArrayList<String> mSelectedImage = new ArrayList<String>();

    public Uri mCaptureImageUri;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.at_select_pic);
        if (savedInstanceState != null) {
            mCaptureImageUri = Uri.parse(savedInstanceState.getString("str_temp_uri"));
        }
        initView();
        initData();
        setListener();
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        if (mCaptureImageUri != null) {
            outState.putString("str_temp_uri", mCaptureImageUri.toString());
        }
    }

    private void initView() {
        layout_back = (LinearLayout) findViewById(R.id.layout_back);
        layout_bottom = (LinearLayout) findViewById(R.id.layout_bottom);
        btn_right = (Button) findViewById(R.id.btn_right);
        mGirdView = (GridView) findViewById(R.id.id_gridView);
        btn_yulan = (Button) findViewById(R.id.btn_yulan);
        btn_fayuantu = (Button) findViewById(R.id.btn_fayuantu);
    }

    private void initData() {
        photoGraphType = getIntent().getStringExtra("type");
        if ("upload".equals(photoGraphType)) {
            btn_right.setVisibility(View.VISIBLE);
            layout_bottom.setVisibility(View.VISIBLE);
        }
        getAllPicture();
    }

    private void setListener() {
        layout_back.setOnClickListener(this);
        btn_right.setOnClickListener(this);
        btn_yulan.setOnClickListener(this);
        btn_fayuantu.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        Intent it;
        switch (v.getId()) {
            case R.id.layout_back:
                finish();
                break;
            case R.id.btn_right:
                if (mSelectedImage.size() == 0) {
                    WeiShootToast.makeErrorText(SelectPicActivity.this, "请选择图片",
                            WeiShootToast.LENGTH_SHORT).show();
                    return;
                }
                it = new Intent(SelectPicActivity.this, UploadWeiShootActivity.class);
                it.putStringArrayListExtra("mSelectedImage", mSelectedImage);
                startActivityForResult(it, 1);
                overridePendingTransition(R.anim.bottom_in, R.anim.top_out);
                break;
            case R.id.btn_yulan:
                if (mSelectedImage.size() == 0) {
                    WeiShootToast.makeErrorText(SelectPicActivity.this, "请选择图片",
                            WeiShootToast.LENGTH_SHORT).show();
                    return;
                }
                it = new Intent(SelectPicActivity.this, AdvancePicActivity.class);
                it.putStringArrayListExtra("mSelectedImage", mSelectedImage);
                startActivityForResult(it, 1);
                break;
            case R.id.btn_fayuantu:
                break;
            default:
                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case Constant.OPEN_CAMERA:
                if (resultCode == RESULT_OK) {
                    Intent intent = new Intent();
                    intent.putExtra("picUri", mCaptureImageUri);
                    if ("head".equals(photoGraphType)) {
                        intent.setClass(SelectPicActivity.this, ProcessHeadActivity.class);
                        startActivityForResult(intent, 1);
                    } else if ("upload".equals(photoGraphType)) {
                        intent.setClass(SelectPicActivity.this, UploadWeiShootActivity.class);
                        startActivityForResult(intent, 1);
                        overridePendingTransition(R.anim.bottom_in, R.anim.top_out);
                    } else if ("movie".equals(photoGraphType)) {
                        intent.setClass(SelectPicActivity.this, ScreenshotMovieActivivty.class);
                        startActivityForResult(intent, 1);
                    } else if ("pictorial".equals(photoGraphType)) {
                        intent.setClass(SelectPicActivity.this, SelectPicTemplateActivity.class);
                        startActivityForResult(intent, 1);
                    }
                }
                break;
            default:
                break;
        }
        Intent it;
        switch (resultCode) {
            case Constant.RESULT_HEAD:
                setResult(Constant.RESULT_HEAD, data);
                finish();
                break;
            case Constant.RESULT_ADVANCE_EDIT:
                mSelectedImage = data.getStringArrayListExtra("mSelectedImage");
                selectPicAdapter = new SelectPicAdapter(this, mSelectedImage, imageUrlList,
                        photoGraphType);
                mGirdView.setAdapter(selectPicAdapter);
                break;
            case Constant.RESULT_ADVANCE_OK:
                mSelectedImage = data.getStringArrayListExtra("mSelectedImage");
                it = new Intent(SelectPicActivity.this, UploadWeiShootActivity.class);
                it.putStringArrayListExtra("mSelectedImage", mSelectedImage);
                startActivityForResult(it, 1);
                break;
            case Constant.RESULT_UPLOAD_SUCCESS:
                setResult(resultCode, data);
                finish();
                break;
            default:
                break;
        }
    }

    private void getAllPicture() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                imageUrlList = MediaStoreUtils.loadAllImage(getApplicationContext());
                Message msg = new Message();
                msg.what = 0x120;
                mHandler.sendMessage(msg);
            }
        }).start();
    }

    private Handler mHandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            dataView(imageUrlList);
        };
    };

    private void dataView(List<String> arraylist) {
        selectPicAdapter = new SelectPicAdapter(this, mSelectedImage, arraylist, photoGraphType);
        mGirdView.setAdapter(selectPicAdapter);
        selectPicAdapter.setSelectSinglePicClickListener(new SelectSinglePicClickListener() {

            @Override
            public void singlePicClick(String headPath) {
                Intent intent = new Intent();
                intent.putExtra("picUri", Uri.parse(headPath));
                /*
                 * 调用setResult方法表示我将Intent对象返回给之前的那个Activity，
                 * 这样就可以在onActivityResult方法中得到Intent对象，
                 */
                if ("head".equals(photoGraphType)) {
                    intent.setClass(SelectPicActivity.this, ProcessHeadActivity.class);
                    startActivityForResult(intent, 1);
                } else if ("movie".equals(photoGraphType)) {
                    intent.setClass(SelectPicActivity.this, ScreenshotMovieActivivty.class);
                    startActivityForResult(intent, 1);
                } else if ("pictorial".equals(photoGraphType)) {
                    intent.setClass(SelectPicActivity.this, SelectPicTemplateActivity.class);
                    startActivityForResult(intent, 1);
                }
            }
        });
        selectPicAdapter.setUploadClickListener(new UploadClickListener() {

            @Override
            public void getPathsClick(ArrayList<String> paths) {
                mSelectedImage = paths;
            }
        });
        selectPicAdapter.setOpenCameraOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                // 指定调用相机拍照后照片的储存路径
                File tempFile = BitmapUtils1.createCameraPath("/weishoot/Camera/",
                        BitmapUtils1.getPhotoFileName());
                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                mCaptureImageUri = Uri.fromFile(tempFile);
                intent.putExtra(MediaStore.EXTRA_OUTPUT, mCaptureImageUri);
                startActivityForResult(intent, Constant.OPEN_CAMERA);
            }
        });
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (selectPicAdapter != null) {
            selectPicAdapter.setClearList();
        }
    }
}
