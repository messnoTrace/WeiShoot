
package com.NationalPhotograpy.weishoot.activity.photograph;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Matrix;
import android.graphics.PointF;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.FloatMath;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;

import com.NationalPhotograpy.weishoot.R;
import com.NationalPhotograpy.weishoot.activity.BaseActivity;
import com.NationalPhotograpy.weishoot.storage.Constant;
import com.NationalPhotograpy.weishoot.utils.BitmapUtils1;
import com.NationalPhotograpy.weishoot.view.ClipMovieView;
import com.NationalPhotograpy.weishoot.view.ProgressiveDialog;
import com.nostra13.universalimageloader.core.ImageLoader;

/**
 * 裁剪头像
 */
@SuppressLint("FloatMath")
public class ScreenshotMovieActivivty extends BaseActivity implements OnClickListener,
        OnTouchListener {

    private LinearLayout layout_back;

    private Button btn_right;

    private ImageView src_pic;

    private ClipMovieView clipview;

    private Matrix matrix = new Matrix();

    private Matrix savedMatrix = new Matrix();

    private final int NONE = 0;

    private final int DRAG = 1;

    private final int ZOOM = 2;

    private int mode = NONE;

    private PointF start = new PointF();

    private PointF mid = new PointF();

    private float oldDist = 1f;

    private RelativeLayout layout_clip;

    private ProgressiveDialog progressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.at_screenshot_movie);
        initView();
        initData();
        setListener();
    }

    private void initView() {
        progressDialog = new ProgressiveDialog(this);
        layout_back = (LinearLayout) findViewById(R.id.layout_back);
        btn_right = (Button) findViewById(R.id.btn_right);
        src_pic = (ImageView) findViewById(R.id.src_pic);
        clipview = (ClipMovieView) findViewById(R.id.clipview);
        layout_clip = (RelativeLayout) findViewById(R.id.layout_clip);
    }

    private void initData() {
        progressDialog.show();
        String picUri = getIntent().getStringExtra("picUri");
        ImageLoader.getInstance().displayImage("file://" + picUri, src_pic);
        mmmhandler.sendEmptyMessageDelayed(1, 3000);
    }

    private void setListener() {
        layout_back.setOnClickListener(this);
        btn_right.setOnClickListener(this);
        src_pic.setOnTouchListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.layout_back:
                finish();
                break;
            case R.id.btn_right:
                process();
                break;

            default:
                break;
        }
    }

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        ImageView view = (ImageView) v;
        switch (event.getAction() & MotionEvent.ACTION_MASK) {
            case MotionEvent.ACTION_DOWN:
                savedMatrix.set(matrix);
                // 設置初始點位置
                start.set(event.getX(), event.getY());
                mode = DRAG;
                break;
            case MotionEvent.ACTION_POINTER_DOWN:
                oldDist = spacing(event);
                if (oldDist > 10f) {
                    savedMatrix.set(matrix);
                    midPoint(mid, event);
                    mode = ZOOM;
                }
                break;
            case MotionEvent.ACTION_UP:
            case MotionEvent.ACTION_POINTER_UP:
                mode = NONE;
                break;
            case MotionEvent.ACTION_MOVE:
                if (mode == DRAG) {
                    matrix.set(savedMatrix);
                    matrix.postTranslate(event.getX() - start.x, event.getY() - start.y);
                } else if (mode == ZOOM) {
                    float newDist = spacing(event);
                    if (newDist > 10f) {
                        matrix.set(savedMatrix);
                        float scale = newDist / oldDist;
                        System.out.println(scale);// 原图和新图比例
                        matrix.postScale(scale, scale, mid.x, mid.y);
                    }
                }
                break;
        }

        view.setImageMatrix(matrix);
        return true;
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == Constant.RESULT_UPLOAD_SUCCESS) {
            setResult(resultCode, data);
            finish();
        }
    }

    private float spacing(MotionEvent event) {
        float x = event.getX(0) - event.getX(1);
        float y = event.getY(0) - event.getY(1);
        return FloatMath.sqrt(x * x + y * y);
    }

    private void midPoint(PointF point, MotionEvent event) {
        float x = event.getX(0) + event.getX(1);
        float y = event.getY(0) + event.getY(1);
        point.set(x / 2, y / 2);
    }

    public void process() {
        progressDialog.show();
        mhandler.sendEmptyMessageDelayed(1, 100);
    }

    private Handler mhandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            Bitmap fianBitmap = getBitmap();
            String picUri = BitmapUtils1.saveBitmap(fianBitmap);
            Message mmsg = new Message();
            mmsg.obj = picUri;
            mmhandler.sendMessageDelayed(mmsg, 200);
        };
    };

    private Handler mmhandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            progressDialog.show();
            Intent it = new Intent(ScreenshotMovieActivivty.this, CreateMovieActivity.class);
            it.putExtra("picUri", msg.obj + "");
            startActivityForResult(it, 1);
        };
    };

    private Handler mmmhandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            progressDialog.dismiss();
        };
    };

    /* 获取矩形区域内的截图 */
    private Bitmap getBitmap() {
        layout_clip.setDrawingCacheEnabled(true);
        layout_clip.buildDrawingCache();
        clipview = (ClipMovieView) this.findViewById(R.id.clipview);
        int rectMovieWidth = clipview.getWidth();
        int rectMocieHeight = (int) (rectMovieWidth * Constant.MOVIE_SIZE);
        int tempHeight = (clipview.getHeight() - rectMocieHeight) / 2;
        Bitmap finalBitmap = Bitmap.createBitmap(layout_clip.getDrawingCache(), 1, tempHeight,
                rectMovieWidth - 2, rectMocieHeight);
        layout_clip.setDrawingCacheEnabled(false);
        return finalBitmap;
    }
}
