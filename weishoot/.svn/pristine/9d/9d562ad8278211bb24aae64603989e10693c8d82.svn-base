
package com.NationalPhotograpy.weishoot.activity.quanzi;

import io.rong.imkit.RongIM;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Toast;

import com.NationalPhotograpy.weishoot.R;
import com.NationalPhotograpy.weishoot.activity.BaseActivity;
import com.NationalPhotograpy.weishoot.adapter.quanzi.FriendsListAdapter;
import com.NationalPhotograpy.weishoot.adapter.quanzi.SideBar;
import com.NationalPhotograpy.weishoot.bean.MutualConcernBean;
import com.NationalPhotograpy.weishoot.bean.ZambiaBean;
import com.NationalPhotograpy.weishoot.net.HttpUrl;
import com.NationalPhotograpy.weishoot.storage.SharePreManager;
import com.NationalPhotograpy.weishoot.storage.StaticInfo;
import com.NationalPhotograpy.weishoot.utils.StringsUtil;
import com.NationalPhotograpy.weishoot.view.MyToast;
import com.NationalPhotograpy.weishoot.view.ProgressiveDialog;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;

/**
 * 圈子-联系人列表
 */
public class MutualConcernActivity extends BaseActivity implements OnClickListener {

    private LinearLayout layout_back;

    private ListView lvContent;

    private SideBar indexBar;

    private ProgressiveDialog progressDialog;

    private List<ZambiaBean> data;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.at_mutual_concern);
        initView();
        initData();
        setListener();
    }

    private void initView() {
        progressDialog = new ProgressiveDialog(this);
        layout_back = (LinearLayout) findViewById(R.id.layout_back);
        lvContent = (ListView) findViewById(R.id.lvContent);
        indexBar = (SideBar) findViewById(R.id.sideBar);
    }

    private void initData() {
        requestGetFriendByCode();
    }

    private void setListener() {
        layout_back.setOnClickListener(this);
        lvContent.setOnItemClickListener(new OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                RongIM.getInstance().startPrivateChat(MutualConcernActivity.this,
                        data.get(position).UCode.replace("-", ""), data.get(position).NickName);
            }
        });
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.layout_back:
                finish();
                break;
            default:
                break;
        }
    }

    private void onRefresh(List<ZambiaBean> data) {
        this.data = data;
        FriendsListAdapter friendsAdapter = new FriendsListAdapter(this);
        friendsAdapter.setFlag("attention");
        friendsAdapter.setData(data);
        lvContent.setAdapter(friendsAdapter);
        HashSet<Character> set = new HashSet<Character>();
        for (int i = 0; i < data.size(); i++) {
            String fanyi = StringsUtil.converterToFirstSpell(data.get(i).NickName
                    .toUpperCase(Locale.ENGLISH));
            char[] strChar = fanyi.toCharArray();
            set.add(strChar[0]);
        }
        indexBar.setIndex(set);
        indexBar.setListView(lvContent);
    }

    /**
     * 获取联系人
     */
    private void requestGetFriendByCode() {
        progressDialog.show();
        HttpUtils httpUtils = new HttpUtils(1000 * 20);
        RequestParams params = new RequestParams();
        params.addBodyParameter("UCode", SharePreManager.getInstance(this).getUserUCode());
        params.addBodyParameter("TokenKey", HttpUrl.tokenkey);
        httpUtils.send(HttpMethod.POST, HttpUrl.GetFriendByCode, params,
                new RequestCallBack<Object>() {

                    @Override
                    public void onFailure(HttpException e, String s) {
                        e.printStackTrace();
                        progressDialog.dismiss();
                        MyToast.makeText(MutualConcernActivity.this,
                                getString(R.string.http_timeout), Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onSuccess(ResponseInfo<Object> objectResponseInfo) {
                        progressDialog.dismiss();
                        String temp = (String) objectResponseInfo.result;
                        MutualConcernBean mutualBean = new Gson().fromJson(temp,
                                new TypeToken<MutualConcernBean>() {
                                }.getType());
                        if (mutualBean != null && mutualBean.result != null) {
                            if ("200".equals(mutualBean.result.ResultCode)) {
                                onRefresh(mutualBean.data);
                                Set<ZambiaBean> zamSet = new HashSet(StaticInfo.mutualConcernList);
                                zamSet.addAll(mutualBean.data);
                                StaticInfo.mutualConcernList.clear();
                                StaticInfo.mutualConcernList.addAll(new ArrayList(zamSet));
                            } else {
                                MyToast.makeText(MutualConcernActivity.this,
                                        mutualBean.result.ResultMsg, Toast.LENGTH_SHORT).show();
                            }
                        } else {
                            MyToast.makeText(MutualConcernActivity.this,
                                    getString(R.string.http_timeout), Toast.LENGTH_SHORT).show();
                        }
                    }
                });

    }
}
