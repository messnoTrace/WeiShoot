package com.NationalPhotograpy.weishoot.activity.find;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Random;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.NationalPhotograpy.weishoot.R;
import com.NationalPhotograpy.weishoot.activity.BaseActivity;
import com.NationalPhotograpy.weishoot.activity.pay.PayResult;
import com.NationalPhotograpy.weishoot.activity.pay.SignUtils;
import com.NationalPhotograpy.weishoot.bean.CommonBean;
import com.NationalPhotograpy.weishoot.bean.PayBean;
import com.NationalPhotograpy.weishoot.net.HttpUrl;
import com.NationalPhotograpy.weishoot.storage.SharePreManager;
import com.NationalPhotograpy.weishoot.view.EditUserInfoDialog;
import com.NationalPhotograpy.weishoot.view.MyToast;
import com.NationalPhotograpy.weishoot.view.ProgressiveDialog;
import com.alipay.sdk.app.PayTask;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;

/**
 * 充值页面
 */
public class ChongzhiActivity extends BaseActivity implements OnClickListener {
	private TextView tv_title, tv_wushi, tv_yibai, tv_erbai, tv_sanbai,
			tv_wubai, tv_other;
	private Button btn_pay;
	private EditText et_other;
	private RelativeLayout rl_other;
	private String pay_money = "50";
	private ProgressiveDialog dialog;
	//商户PID
		public static final String PARTNER = "2088901017259389";
		//商户收款账号
		public static final String SELLER = "snowbird0214@vip.qq.com";
		//商户私钥，pkcs8格式
		public static final String RSA_PRIVATE = "MIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAMIg5Nb79bkHUlaPjUpJHPVI4RGegfnSR7CR10Q6L7lo+jeqIycaNFkLfM5yzjF/HPQU41z7YVR4emw4ahf2HAHd6wjDosyOROWivyms6azx+rAWGL9uigcHZPF6viJ4TBetseCrHGufWQPFCHHCJapV+cjU9wmsxjWI7AuZBIzbAgMBAAECgYA+br/KGExFjoI/jnldO7hRdnfT58tbYfJmafD2Y1Q35/gY8OHPUJEnVhd0ed2wc3YHVbRtkfcSaJDOvzH3tNH6hEZh16QwkjOZ7v/XrzHL2wm2Z5lTP5KwfTYG7UIhxN2HU92K1kCOj56vZmZ9Ry+dXkmtiG1FO8iVDW6c9PFZoQJBAOVbgHN+fZjeOF3bGZR6pB9oHTA5oEh/VFxiSmHJCK51e+zVQN9yDyZaO/vZQdpMdepuuSRNXkT2tonWRFF/9VECQQDYrcZBzymtjkVdjML+GHIIX0awxdXvIXiGzyb6h/gYest+iM8Ff+nWTCAiaOV6sbYqCiJhpMdjnDrk2plDh8RrAkB24UueEXUmNCCBPVxv4nWJNdzTLztN+HmQfP3S23Gdg5WdNxet+Z+yoFiw/HYuoS0JOyTJlTSEiGAq5513pNxRAkBEKtd2mMAZ8+pqtgAahIJLk/3fWz4kzzjl4IH4y5IH0Yn3sv6+UjG005pAeRPI9+PBchLC+V4pPltg6EzTbAElAkAwtiQZzGDEkzOfkz6QA0Q5Dvz5xSzcnGdzBOKMrKynNk0EClo0XY++klhjauLoty6Cmvv6kSHqB3NIMYe64tL/";
		//支付宝公钥
//		public static final String RSA_PUBLIC = "";


		private static final int SDK_PAY_FLAG = 1;

		private static final int SDK_CHECK_FLAG = 2;

		private Handler mHandler = new Handler() {
			public void handleMessage(Message msg) {
				switch (msg.what) {
				case SDK_PAY_FLAG: {
					PayResult payResult = new PayResult((String) msg.obj);
					
					// 支付宝返回此次支付结果及加签，建议对支付宝签名信息拿签约时支付宝提供的公钥做验签
					String resultInfo = payResult.getResult();
					
					String resultStatus = payResult.getResultStatus();

					// 判断resultStatus 为“9000”则代表支付成功，具体状态码代表含义可参考接口文档
					if (TextUtils.equals(resultStatus, "9000")) {
						Toast.makeText(ChongzhiActivity.this, "支付成功",
								Toast.LENGTH_SHORT).show();
						requestUpdateCoin(pay_money);
					} else {
						// 判断resultStatus 为非“9000”则代表可能支付失败
						// “8000”代表支付结果因为支付渠道原因或者系统原因还在等待支付结果确认，最终交易是否成功以服务端异步通知为准（小概率状态）
						if (TextUtils.equals(resultStatus, "8000")) {
							Toast.makeText(ChongzhiActivity.this, "支付结果确认中",
									Toast.LENGTH_SHORT).show();

						} else {
							// 其他值就可以判断为支付失败，包括用户主动取消支付，或者系统返回的错误
							Toast.makeText(ChongzhiActivity.this, "支付失败",
									Toast.LENGTH_SHORT).show();

						}
					}
					break;
				}
				case SDK_CHECK_FLAG: {
					Toast.makeText(ChongzhiActivity.this, "检查结果为：" + msg.obj,
							Toast.LENGTH_SHORT).show();
					break;
				}
				default:
					break;
				}
			};
		};


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.at_chongzhi);
		initView();
		initData();
		setListener();
	}

	private void initView() {
		dialog = new ProgressiveDialog(this);
		tv_title = (TextView) findViewById(R.id.tv_title);
		tv_wushi = (TextView) findViewById(R.id.tv_wushi);
		tv_yibai = (TextView) findViewById(R.id.tv_yibai);
		tv_erbai = (TextView) findViewById(R.id.tv_erbai);
		tv_sanbai = (TextView) findViewById(R.id.tv_sanbai);
		tv_wubai = (TextView) findViewById(R.id.tv_wubai);
		tv_other = (TextView) findViewById(R.id.tv_other);
		btn_pay = (Button) findViewById(R.id.btn_pay);
		rl_other = (RelativeLayout) findViewById(R.id.rl_other);
		et_other = (EditText) findViewById(R.id.et_other);
	}

	private void initData() {
		tv_wushi.setBackgroundDrawable(getResources().getDrawable(
				R.drawable.icon_check));
	}

	private void setListener() {
		tv_title.setOnClickListener(this);
		tv_wushi.setOnClickListener(this);
		tv_yibai.setOnClickListener(this);
		tv_erbai.setOnClickListener(this);
		tv_sanbai.setOnClickListener(this);
		tv_wubai.setOnClickListener(this);
		btn_pay.setOnClickListener(this);
		tv_other.setOnClickListener(this);
		rl_other.setOnClickListener(this);
	}

	@SuppressWarnings("deprecation")
	@SuppressLint("ShowToast")
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.tv_title:
			finish();
			break;
		case R.id.tv_wushi:
			setTextViewBackgound();
			tv_wushi.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			pay_money = "50";
			break;
		case R.id.tv_yibai:
			setTextViewBackgound();
			tv_yibai.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			pay_money = "100";
			break;
		case R.id.tv_erbai:
			setTextViewBackgound();
			tv_erbai.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			pay_money = "200";
			break;
		case R.id.tv_sanbai:
			setTextViewBackgound();
			tv_sanbai.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			pay_money = "300";
			break;
		case R.id.tv_wubai:
			setTextViewBackgound();
			tv_wubai.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			pay_money = "500";
			break;
		case R.id.tv_other:
			setTextViewBackgound();
			tv_other.setVisibility(View.GONE);
			rl_other.setBackgroundDrawable(getResources().getDrawable(
					R.drawable.icon_check));
			rl_other.setVisibility(View.VISIBLE);
			break;
		case R.id.btn_pay:
			String money = null;
			if (tv_other.getVisibility() == 0) {
				money = pay_money;
			} else {
				money = et_other.getText().toString().trim();
			}
			if(TextUtils.isEmpty(money)){
				dialogHit("充值金额不能为空");
			}else{
				int i=Integer.parseInt(money);
				
				if(i<1){
					dialogHit("充值金额不能小于1元");
				}else{
					pay_money = i+"";
					pay(i+"");
					
				}
			}
			break;

		default:
			break;
		}
	}

	@SuppressLint("ResourceAsColor")
	private void setTextViewBackgound() {
		tv_wushi.setBackgroundColor(0xf7f7f7);
		tv_yibai.setBackgroundColor(0xf7f7f7);
		tv_erbai.setBackgroundColor(0xf7f7f7);
		tv_sanbai.setBackgroundColor(0xf7f7f7);
		tv_wubai.setBackgroundColor(0xf7f7f7);
		tv_other.setBackgroundColor(0xf7f7f7);
		rl_other.setVisibility(View.GONE);
		tv_other.setVisibility(View.VISIBLE);
	}
	
	/**
	 * call alipay sdk pay. 调用SDK支付
	 * 
	 */
	public void pay(String money) {
		// 订单
		String orderInfo = getOrderInfo("测试的商品", "该测试商品的详细描述", money);

		// 对订单做RSA 签名
		String sign = sign(orderInfo);
		try {
			// 仅需对sign 做URL编码
			sign = URLEncoder.encode(sign, "UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}

		// 完整的符合支付宝参数规范的订单信息
		final String payInfo = orderInfo + "&sign=\"" + sign + "\"&"
				+ getSignType();

		Runnable payRunnable = new Runnable() {

			@Override
			public void run() {
				// 构造PayTask 对象
				PayTask alipay = new PayTask(ChongzhiActivity.this);
				// 调用支付接口，获取支付结果
				String result = alipay.pay(payInfo);

				Message msg = new Message();
				msg.what = SDK_PAY_FLAG;
				msg.obj = result;
				mHandler.sendMessage(msg);
			}
		};

		// 必须异步调用
		Thread payThread = new Thread(payRunnable);
		payThread.start();
	}
	
	/**
	 * get the sdk version. 获取SDK版本号
	 * 
	 */
	public void getSDKVersion() {
		PayTask payTask = new PayTask(this);
		String version = payTask.getVersion();
		Toast.makeText(this, version, Toast.LENGTH_SHORT).show();
	}

	/**
	 * create the order info. 创建订单信息
	 * 
	 */
	public String getOrderInfo(String subject, String body, String price) {
		// 签约合作者身份ID
		String orderInfo = "partner=" + "\"" + PARTNER + "\"";

		// 签约卖家支付宝账号
		orderInfo += "&seller_id=" + "\"" + SELLER + "\"";

		// 商户网站唯一订单号
		orderInfo += "&out_trade_no=" + "\"" + getOutTradeNo() + "\"";

		// 商品名称
		orderInfo += "&subject=" + "\"" + subject + "\"";

		// 商品详情
		orderInfo += "&body=" + "\"" + body + "\"";

		// 商品金额
		orderInfo += "&total_fee=" + "\"" + price + "\"";

		// 服务器异步通知页面路径
		orderInfo += "&notify_url=" + "\"" + "http://notify.msp.hk/notify.htm"
				+ "\"";

		// 服务接口名称， 固定值
		orderInfo += "&service=\"mobile.securitypay.pay\"";

		// 支付类型， 固定值
		orderInfo += "&payment_type=\"1\"";

		// 参数编码， 固定值
		orderInfo += "&_input_charset=\"utf-8\"";

		// 设置未付款交易的超时时间
		// 默认30分钟，一旦超时，该笔交易就会自动被关闭。
		// 取值范围：1m～15d。
		// m-分钟，h-小时，d-天，1c-当天（无论交易何时创建，都在0点关闭）。
		// 该参数数值不接受小数点，如1.5h，可转换为90m。
		orderInfo += "&it_b_pay=\"30m\"";

		// extern_token为经过快登授权获取到的alipay_open_id,带上此参数用户将使用授权的账户进行支付
		// orderInfo += "&extern_token=" + "\"" + extern_token + "\"";

		// 支付宝处理完请求后，当前页面跳转到商户指定页面的路径，可空
		orderInfo += "&return_url=\"m.alipay.com\"";

		// 调用银行卡支付，需配置此参数，参与签名， 固定值 （需要签约《无线银行卡快捷支付》才能使用）
		// orderInfo += "&paymethod=\"expressGateway\"";

		return orderInfo;
	}

	/**
	 * get the out_trade_no for an order. 生成商户订单号，该值在商户端应保持唯一（可自定义格式规范）
	 * 
	 */
	public String getOutTradeNo() {
		SimpleDateFormat format = new SimpleDateFormat("MMddHHmmss",
				Locale.getDefault());
		Date date = new Date();
		String key = format.format(date);

		Random r = new Random();
		key = key + r.nextInt();
		key = key.substring(0, 15);
		return key;
	}

	/**
	 * sign the order info. 对订单信息进行签名
	 * 
	 * @param content
	 *            待签名订单信息
	 */
	public String sign(String content) {
		return SignUtils.sign(content, RSA_PRIVATE);
	}

	/**
	 * get the sign type we use. 获取签名方式
	 * 
	 */
	public String getSignType() {
		return "sign_type=\"RSA\"";
	}
	
	private void dialogHit(String title){
		final EditUserInfoDialog sexDialog = new EditUserInfoDialog(this);
		sexDialog.setTitle(title);
        sexDialog.show();
        sexDialog.getDialogSingleBtn().setText("确定");
        sexDialog.setOnSingleCancelListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                sexDialog.dismiss();
            }
        });
	}
	 /**
     * 更新用户图贝
     */
    private void requestUpdateCoin(String money) {
    	dialog.show();
        HttpUtils httpUtils = new HttpUtils(1000 * 20);
        RequestParams params = new RequestParams();
        params.addBodyParameter("UCode", SharePreManager.getInstance(this).getUserUCode());
        params.addBodyParameter("coin", money);
        params.addBodyParameter("type", "0");
        params.addBodyParameter("TokenKey", HttpUrl.tokenkey);
        httpUtils.send(HttpMethod.POST, HttpUrl.UpdateCoin, params,
                new RequestCallBack<Object>() {

                    @Override
                    public void onFailure(HttpException e, String s) {
                        e.printStackTrace();
                        dialog.dismiss();
                        MyToast.makeText(ChongzhiActivity.this,
                                getString(R.string.http_timeout), Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onSuccess(ResponseInfo<Object> objectResponseInfo) {
                    	dialog.dismiss();
                        String temp = (String) objectResponseInfo.result;
                        PayBean userBean = new PayBean();
                        userBean = userBean.toJson(temp);
                        if (userBean != null && userBean.resultCode != null) {
                            if ("200".equals(userBean.resultCode)) {
                            	dialogHit("充值成功");
                            } else {
                            	dialogHit(userBean.resultMsg);
                            }
                        } else {
                            MyToast.makeText(ChongzhiActivity.this,
                                    getString(R.string.http_timeout), Toast.LENGTH_SHORT).show();
                        }
                    }
                });

    }
}
